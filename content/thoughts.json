[
  {
    "id": "1729187511105",
    "content": "linux-cheatsheet速查表\n\nTERMINAL:\nCtrl+Shift C — Copy\nCtrl+Shift V — Paste\nCtrl+Shift T — New tab   \nCtrl+Shift W — Close tab     \nCtrl PgUp/PgDn — Switch tab\nCtrl +/- — Zoom\nCtrl D — Close terminal\nCtrl S — Scroll lock\n\n\nBASH:\nKeys when in emacs mode. You can switch to `vi` mode with `set -o vi` command.\nCtrl C — Interrupt, erase line\nCtrl A — Go to beginning of line\nCtrl E — End of line\nCtrl U — Copy line\nCtrl Y — Paste line\nAlt . — Last argument\nCtrl R — Search trough history\nAlt * — Show all matches for regular expression\nCtrl+Alt E — Show current line passed through alias, history and shell expansion\nCtrl X, Ctrl E — Edit command in editor\nCtrl P — Show last command (same as up arrow)\n\n\n\n###############################\n## AWESOME TERMINAL COMMANDS ##\n###############################\n\n========\nPACKAGES:\n========\n\ndpkg — Low level package manager for Debian.\n    -l — Lists installed packages.\n    -i <package> (sudo) — Installs package from a package file.\napt-get — Advanced Package Tool built on top of `dpkg`. New command called \n        simply `apt` is also available. It merges the functionalities of \n        `apt-get` and `apt-cache`.\n    update — Updates local list of existing packages.\n    -u dist-upgrade — Upgrades by intelligently handling changing dependencies \n            with new versions of packages. To regularly update put this line \n            in `crontab`:  \n            `apt-get update && apt-get -u dist-upgrade`. \n    upgrade — Same as dist-upgrade, but will not remove installed packages or \n            install new ones.\n    install <package> — Also updates single package.\n    remove <package> — Removes package but leaves its configurations.\n    remove apt-listchanges — Useful when Debian can't find a package.\n    purge <package> — Removes package and its configurations. Run `apt-get \n            autoremove` after to remove all dependencies that are not needed \n            anymore.\n    autoremove — Removes unneeded packages.\n    source <package> — Downloads code.\n    build-dep <package> — Installs the build dependencies.\n    --yes — Answers with 'yes' to most questions (Except the ones that can have\n            potentially harmful consequences).\n    --force-yes — Answers 'yes' to all questions (Not recommended).\napt-cache — Queries the APT's internal database. \n    search <keyword> — Searches packages like `apropos`, but globally.\n    show <package> — Shows package info like version, dependencies, etc.\n    showpkg <package> — Similar, but also shows the packages that depend on the\n            searched package (reverse dependencies).\n    policy <package> — Shows installed and remote version.\napt-file — APT package searching utility.\n    search <file> — Search in which package a file is included.\n    update — Updates local list of package contents.\naptitude — Enables package browsing (skin for apt-get).\n    search '~i!~M' — Lists installed packages that were not installed as a \n            dependency, with short description of each.\n    search <package> — Package search.\n\nwinetricks — Installs wine applications.\nupdate-alternatives — Maintains symbolic links determining default commands.\nunattended-upgrade — Automatic installation of security upgrades.\n\n\nCOMMANDS:\napropos <cmd> — Searches the manual page names and descriptions (use quotes \n        for phrases).\n    -a — Matches all keywords.\nwhatis <cmd> — Displays one-line manual page description.\nwhereis <cmd> — Locates the binary, source, and manual page files for a \n        command.\nwhich <cmd> — Locates only the binary of a command.\nwtf — Translates acronyms and filename suffixes.\n\n\nINSTALL MANTRA:\n```\n./configure --help\n./configure\nmake\nsudo make install\n```\n\n=======\nGENERAL:\n=======\n\nsu — Switches user.\n    - <user> — Switches to user.\n    - — Switches to root.\nman — Help on commands.\n    <section> — Section numbers: 1. Programs, 2. System calls, 3. Library calls,\n            4. Special files, 5. File formats, 7. Miscellaneous, 8. System \n            administration commands\necho — Prints passed text.\n    -n — Does not add newline at the end.\n    -e — Enables interpretation of backslashed letters.\nxargs <cmd> — Passes output from one command to arguments of another:  \n        `echo -a | xargs ls`\n    -t — Echoes the command before executing it. \n    -p — Echoes command and asks for confirmation before execution.\n    -0 — Input items are separated by null character instead of space.\ntee <file> — Sends output of a program to specified file and to standard \n        output:  \n        `<cmd_1> | tee out_1.txt | <cmd_2>`\n    /dev/tty — Sends output to terminal and to standard output\nexpr — Evaluates passed expression.\n    1 + 1 — Prints `2`.\nbc — Evaluates input. It's basically a calculator, but also provides some \n        control commands.\n    echo 1 + 1 | bc — Prints `2`.\n    echo \"scale=5;3/4\" | bc — Prints `.75000`.\nsh — Runs command interpreter (shell). Can run a script even if not executable.\n    -c '<commands>' — Starts new non-interactive shell and reads commands from \n        arguments instead of `stdin`.  \n        To append lines to system configuration file run:  \n        `sudo sh -c 'echo \"<text>\" >> <file>'`\nbash — Runs bash command interpreter (shell).\n    -c — Reads commands from arguments instead of `stdin`.\n    -n <script> — Checks script for errors.\n    -x — Prints commands before execution. Useful for debugging.\ngcc — Gnu C compiler. Run `g++` for C++ code.\n    -w — Supresses warnings (Only prints errors).\n    -Wall — All warnings.\n    -g — Compile for debugging.\n    -std=<std> — Sets the standard. Suported standards for C are:  \n        `c90`, `gnu90`, `c99`, `gnu99`, `c11` and `gnu11`.  \n        Suported standarts for C++ are:  \n        `c++98`, `gnu++98`, `c++11` and `gnu++11`.  \n        `gnu90` and `gnu++98` are the default options.\n    -O<level> — Optimization level. `0`: Reduce compilation time (default),\n        `1-3`: - Level of optimization, `s` - Optimize for size, `g` - Optimize\n        debugging experience.\nrun-parts <dir> — Runs all scripts or programs in a directory.\ndate — Tells and sets date and time.\n    -s <string> — Sets date.\n    +%T -s \"10:13:13\" — Sets time.\ntimedatectl — Controls the system time and date.\n    set-timezone CET — Sets timezone.\ncal — Calendar\nxclip — Copies to clipboard.\nmkfifo <pipe> — Creates named pipe during that shell session.\nmkisofs — Creates a DVD/CD image.\ngenisoimage — Creates a DVD/CD image (Debian).\ncdrecord — Writes to a CD/DVD.\nacpi — Checks battery.\nfdisk -l (sudo) — Shows partitions. \nshutdown — Closes down the system at a given time.\n    now — Takes you to the single user mode.\n    -h now — Begins the shutdown procedure, same as `halt` and `poweroff`.\n    -h 11:50 — At 11:50.\n    -r now — Same as `reboot`.\nmake — Utility that maintains groups of programs.\n    -q — Doesn't run any commands, just returns `0` exit code if everything is\n            up to date or non-zero otherwise.\n    -B — Unconditionally makes all targets.\n\n\nFILES:\nls  -d — List directory names instead of contents\n    -S — Sort by size \n    -t — Sort by time\n    -1 — One file per line\n    ./* — Ls one level deep\n    -i — Get inode number of file (file id). Use `sudo find / -inum <number>` to find all links that point to same file.\ncp  -i — Interactive (Prompts before overwrite)\n    -v — Verbose (Explains what is being done)\n    -R — Copy directories recursively\n    -p — Preserve mode, ownership and timestamps\n    --preserve=all — Also preserves context, links and xattr\nrm  -i — Interactive (Prompts before every removal)\n    -v — Verbose (Explains what is being done)\n    -f — Force remove (Does not prompt, useful if `rm` is aliased with `-i`)\n    -R — Removes directories and their content recursively \nmkdir  -p — Make parents if needed\nln — Makes links to the files\n    -s <file> <link> — Makes symbolic link. If you want to use relative paths you must be in links directory !!!!!!!!!!!!!!!!!!!!!!\ndf  -h — Displays humanly readable free disk space\ndu  -s <dir> — Directory size\nmc — Midnight commander\n    Alt o — Open parent dir in another panel\n    Ctrl o — Switch to bash\nfind <dir>  -name <file> — Search by name\n    -regex <regex> — Use regex for name search\n    -not — Insert before other options to negate\n    -maxdepth <levels> — Descend only to levels deep\n    -samefile <file> — Find all hard links of a file\n    -xdev — Don't descend directories on other filesystems\n    -inum <inum> — Find files with the inode number\n    -type <f|d|b|...> — Find files of type\n    -delete — Delete found files\n    -exec <cmd> {} \\; — Find files and execute command for every found file. `{}` is replaced with filename\n    -exec <cmd> {} + — Find files and execute command with all filenames in place of `{}`\n    -atime +/-n — Find files that were last accessed less or more than n days.\n    -print0 | xargs -0 <cmd> — Sends found files to a command as parameters. Uses `NUL` character as separator, necessary for filenames with spaces \nlocate <regex>  — Similar as `find` but using index\n    -i — Ignore case\n    --regex — Interprets all patterns as extended regex\n    -0 | xargs -0 <cmd> — Sends found files to a command as parameters.\nupdatedb (sudo) — Update locate index \nmd5sum — Prints md5 sum hash of a file\nread — Read single line from standard input \n  -n 1 — Print after reading one character\n  -s — Do not echo input coming from terminal\nshred — Securely remove files\nfile — Determine file's type\ntree — Ls in a tree-like (hierarchical) format\ninstall — Copy files and set attributes\ngpg — Decrypt file with password\n    -c — Encrypt\nmktemp — Create a temporary file or directory in `/tmp` and returns it's name.\nrename  s/<from>/<to> <files> — Renames multiple files using `sed` syntax\nrsync — A fast, versatile, remote (and local) file-copying tool\n        -Hbaz -e ssh — `<src_dir> <user>@<host>:<dest_dir>` - Backs up the 'src-dir':\n        `-H` preserves hard links, `-b` renames preexisting destination files (back up), `-a` preserve everything except hard links and `-z` compresses.\n        cmp — Compares two files, similar to diff but also for binaries\nstat — Displays files status\n    -c%X — Time of last modification of the file \nreadlink  -f — Follow link recursively and print files path\nxdg-open — Open file with default application for the file type\ndialog — Display dialog box from shell script\nwatch — Execute command periodically\n\n\nARCHIVES:\ndtrx  <archive> — Universal archive extractor\ntar — xvzf <file>.tar.gz (.tgz) — Decompress and detar\n    xvjf <file>.tar.bz2 — Decompress and detar\n    -cf <archive>.tar <files> — Compress\nunzip  \\*.zip — Backslash is necessary so that bash doesn't expand the `*`\n    -d <dir> — Extract into directory (create if doesn't exist)\nzip  -r <archive> <dir> — Compress whole directory recursively.\n    -g <archive> <files> — Add files to existing archive (grow).\nunrar  e — Extract files from rar archive\nzcat — Cats gziped file\n\n\nTERMINAL MULTIPLEXERS:\nscreen — Switch between multiple virtual terminals (useful in ssh). Prefix for\n    a command is `Ctrl a`.\n    c — New terminal, \n    n — Next, \n    p — Previous, \n    a — Go to beginning of line,\n    | — New region vertically,\n    S — New region horizontally,\n    tab — Move to next region,\n    Q — Close all but selected region,\n    X — Kill the current region,\n    esc — Enter copy/scrollback mode -> space: start/stop marking,\n    ] — Paste,\n    k — Kill window,\n    t — Show time and avg CPU load\ntmux — Terminal multiplexer, better screen. Prefix for a command is `Ctrl b`. \n    Most commands are the same as in `screen`.\n    ls — Shows running sessions\n    attach [-t <no>] — Attach to running session\n    d — Detach from currently attached session  \n    pgup — Enter in copy mode and pageup, \n    [ — Copy mode, \n    ] — Paste,  \n    \" — Split horizontally, \n    % — Split vertically \n\n\n====\nBASH:\n====\n\n\"$x\" — ALWAYS PUT DOUBLE QUOTES AROUND VARIABLE!!!!!!!!!!!!!!! \n       All variables in bash are global!!!!!!!\n\"$*\" — Combines all the arguments into single word, separating them with first character of IFS variable. If IFS is not set, space is used. If IFS is null, no separator is used!!!!!!!!! No args provided will result in one empty string being passed on!!! \n\"$@\" — Use this instead!!!!! Will retain arguments as-is, so no args provided will result in no args being passed on. This is in most cases what you want to use for passing on arguments.\n    Google: \"$@\" is right almost everytime, and $* is wrong almost everytime.\n\"$#\" — Number of arguments\n\"$1\" — First argument\n\"$0\" — Name of the script\n$'\\n' — String literal with escape sequences (there is a backslash before n)\n    If you want IFS to be a new line (useful with for loop) you need to: `IFS=$'\\n'` - The dollar forces substitution!!!!!\n    Also if you want 'while read line; do...' to preserve leading spaces and tabs, you need to set IFS=\"\"\n$? — Exit code of last command (0 - Success)\nCtrl-Z, kill %% — Kill looping bash script\n\ntest <expr> — Same as `[ <expr> ]`. Returns zero exit status if true.\n    -n — Is string non empty\n    -z — Is string empty\n    -a — And\n    -o — Or\n    = — Strings are equal\n    -nt — File newer than\n    -ot — Older then\n    -d — Directory exists\n    -e — File exists\n    -f — Is a regular file\n    -h — Its a symbolic link\n    -r — Has read permission\n    -w — Has write permission\n    -x — Has execute permission\n[[ <expr> ]] — Same as `[`, but without word splitting and filename expansion. And with additional operators: `&&`, `||`, `<`, `>` (lexicographic less, more), and also regular expression matching.\n=~ — Regex comparison operator: `[[ \"$HOST\" =~ ^user.* ]]`\nlet <expr> — Executes expression: let a=\"$b\"+2\n\n$(command) — Same as `command`\neval <variable> — Execute string as command\n$RANDOM — 0 - 32767\ninput=`cat` — Getting standard input\n- — In place of a file name means standard in or out\nset -o vi — Set line editing to vi mode\npushd . — Put current dir on stack\npopd — Pop dir from stack\ncd - — go to last dir\nsource <script> — Run script: for example source /etc/profile (same as . <cmd>)\n#!/bin/bash — Good practice to insert at beginning of a bash script\nexport  PATH=\"$PATH:<dir>\" — Adds new directory to path environment variable.\nread  -p <message> — Prompt for user input\nvar=${1:-\"<default>\"} — Setting variable with default value if $1 is empty\ngetopts — Parse parameters/arguments, builtin\ngetopt — GNU version is even better then getopts, not a builtin\nwhile read line; do <commands>; done < <file> — Read from file line by line\n    -r — Do not treat backslashes as escape characters\ncomplete -F <completion_function> <cmd> — Set completion function for command\ncomplete -p <cmd> — Print the completion function for command\ncompgen -c <pattern> — Print all completions for pattern\nhelp <builtin> — Display information about builtin command\nwait — Wait for all background processes to end\n\n\nSAFETY:\nset — -e — Exit if any command fails\n    -u — Exit if referencing undefined variable\n    -o pipefail — If any command in a pipeline fails, its return code is used as the return code of the whole pipeline\nIFS=$'\\n\\t' — Remove space from the default Internal Field Separator\n\n\nHISTORY:\nsudo !! — Run the last command as root \n␣<cmd> — Execute a command without saving it in the history\n!<cmd> — Run last command that starts with cmd\n\n\nREDIRECTIONS:\n<cmd> 2> /dev/null — Redirect error output to `null`\n<cmd> &> /dev/null — Redirect both standard and error output to `null`\n<cmd> >&2 — Write to stderr\n<cmd> 2>&1 | less — Add stderr to stdout and print it with less (useful for gcc)\n\n\nARRAYS AND LINES:\nReads line by line from variable. To preserve spaces use `IFS=`.\n```\nwhile IFS= read -r line; do\n    echo \"... $line ...\"\ndone <<< \"$list\" — \n```\n\n${a[1]} — Value of the second element of the array\nfor c in ${a[@]} — Iterate over array\n${varname:offset:length} — Get substring: `s=\"aeiou\"; ${s:3:1} -> o`\n${#var} — Length of a var \n${#name[subscript]} — Length  of the element\n${#name[@]} — Length  of the array\n\n\nALIASES AND FUNCTIONS:\nalias — Print all aliases\n    <name> — Print alias\n    <name>='cmd' — Set alias\ncommand <cmd> — Executes original command, bypassing any aliases or shell functions that may be defined for command\n\\<cmd> — Temporarily disable alias (call original)\ntype <cmd> — Will tell you what is command aliased to or if it is a builtin, function or a command\n    -P just check commands\ndeclare -F — Print function names\ndeclare -f — Print functions\n\n\n====\nTEXT:\n====\n\nPRINT:\nhead — -n-<num_of_lines> — Print all lines but the last n\n    -c <num_of_chars> — Print first c characters\ntail — -n+<line_num> — Start at line number\n    -f — Do not stop printing (follow)\ncat — -n — Number all lines\n    >> file — Simplest text editor (great for pasting)\nless  &<patt> — Display only lines with pattern\n    -N — Show line numbers\n    -~ — Do not show `~` after `EOF`\n    +G — Tells less to start at the end of the file\n    +F — Follow the input (to scroll up first press ctrl+c)\n    -F — Or --quit-if-one-screen\n    v — Opens editor defined in `$VISUAL` or `$EDITOR`\n    :n — Examine the next file\n    <, > — Go to home, end\nwc — Count lines, words and characters\n\n\nEDIT:\nsudo -e <file> — Edit file as sudo\ntr <from> <to> — Translate characters\n    -d — Delete characters\ncut <file> — Removes columns from each line of files\n    -d ':' -f 1,7 /etc/passwd — Only show the username and the shell\nsort — Sorts lines\n    -u — Uniq, removes duplicates\n    -t — Set delimiter for fields (default is space)\n    -k — Select by which field to sort \nuniq — Removes adjacent duplicates\n    -c — Count\n    -d — Intersection\n    -u — Difference\ncolumn — Columnate text\n    -t — Create a table\nshuf — Shuffle input lines\ntac — Concatenate and print files in reverse (reverse `cat`)\njoin — Join lines of two files on a common field\ncolrm  [from [to]] — Removes columns\nseq <number> — Output numbers from 1 to number\nispell, aspell — Interactive spell checker\nbasename <path> — Strips directory from path\n    -s .<suffix> — Also strip suffix\n    -a — Process multiple filenames\ndirname <path> — Strip last component from path\nfmt — Produce roughly uniform line lengths\nfold — Wrap each input line to fit in specified width\npaste — Glue two documents side by side\nsed — 's///g' — Substitute every occurrence in line, not just the first one\n    's///I' — Ignore case\n    -r — Extended syntax, for `+`, `?`, ... Also you shouldn't escape the parenthesis\n    -r 's###e' — Execute match as a command\n    -i <file> — Will make changes directly to the file (in place)\n    -u — Unbuffered mode (processes input immediately)\n        -n l — Print escape sequence (keycode) of a pressed key\nexpand — Convert tabs to spaces\n    -t <number> — Set number of spaces (default is 8)\n    -i — Do not convert tabs after non blanks\n\n\nDIFF:\ndiff — -u <files> — Unified format\n    --brief -r — Compare two directory trees\ncolordiff — Version of diff with colors\nsdiff — Two files side by side\ncomm — Compare two sorted files line by line\npatch — Apply a diff file to original\n    patch < patch.diff — Apply patch\n    diff -u <old_file> <new_file> > patch.diff — Create patch\n\n\nSEARCH:\ngrep <patt> <file> — -v — Inverse\n    -n — Line numbers \n    -w — Whole word \n    -A<num> — Print also num lines after\n    -B<num> — Print also num lines before\n    -r — Recursive \n    -o — Print only matching part\n    -P — Perl notation with additional operators such as: `\\\\t`, `+` and `?` (non-greedy!!!!).\n    -i — Ignore case \n    -I — Do not process binary files \n    -l — Just print files with matches \n    -L — Just print files without matches\n    -e <patt> — Necessary to put before pattern if it starts with `-`!!!!!!! or if you want multiple patterns.\n    | wc -l — Count occurrences\n    --line-buffered — Processes input line by line instead of in bigger chunks\nlook — Display lines beginning with a given string\nstrings — Print all text parts of binary file\n\n\nCONVERT:\ntodos, fromdos — Convert line endings form/to windows format (package tofrodos)\nenscript — Converts text files to postscript, rtf, HTML\ngs — Ghostscript: postscript and PDF language interpreter and previewer\npdftohtml — Pdf to html\npdftotext — Pdf to text\nlibreoffice — New Openoffice\nfiglet — Display large characters made up of ordinary screen characters (Ascii art)\ntoilet — Similar (Ascii art)\ncproto — Generates C function prototypes (declarations)\n\n\nEDITORS:\nnano — Simple text editor.\n    /etc/nanorc — Config file.\n    /usr/share/nano/<lang>.nanorc — Syntax highlight files.\n    Alt + / or ? — Go to last line.\nfte — Cool text editor with CUA (IBM)-shortcuts\ndiakonos — Simple terminal text editor with ctrl-c for copy\npyroom — Distraction free writing (gui)\n\n\n=======\nNETWORK:\n=======\n\nwhois — Info about domain\nhost <ip/hostname> — DNS lookup utility\nnslookup — Same interactively\ndig — Same, lot of options\nhostname — Prints/sets computer name, to set it permanently edit `/etc/hostname` and `/etc/hosts`\nnetstat — Displays contents of /proc/net files,  status of ports...\n    -r — Show routing table\n    -i — Show interfaces\narp — Manipulate the system ARP cache (IP -> mac)\nroute — Tool used to display or modify the routing table\n    add default gw <ip> — Change the default gateway\n    should DNS not be configured correctly on your machine, you need to edit `/etc/resolv.conf` to make things work\nifconfig eth0   down/up (sudo) — Turn network interface on/off \n    <ip> netmask <mask> up — Set ip and mask\nifup eth0 — Will bring eth0 up if it is currently down.\nip  link show — List network interfaces\n    link set dev eth0 up — Bring interface eth0 up or down\n    addr show — List addresses of interfaces\n    route add default via <ip> — Set default gateway\ntraceroute, traceroute6, traceroute6.iputils — Traces route\ntracepath, tracepath6 — Similar (iputils package)\nmtr — Combines the functionality of the traceroute and ping\nfindsmb — List info about machines that respond to SMB name queries - Windows based machines sharing their hard disks\n/etc/services — List of internet services with their port numbers\nNetworkManager — Network management daemon, configuration file is in /etc/NetworkManager/NetworkManager.conf \nnm-tool — Prints info \nnm-online — Is network connected \nnmcli — Command-line tool for controlling NetworkManager\nnc — (netcat) It can open TCP connections, send UDP packets, listen on arbitrary TCP and UDP ports, do port scanning...\nncat — Concatenate and redirect sockets\nethtool eth0 — Show status of eth0\n    -S — Statistics\n    -s — Change settings (speed, duplex,...)\nss -tupl — List internet services on a system\n    -tuo — List active connections to/from system\n\n\nWIRELESS:\niwconfig — Sets the wireless configuration options basic to most wireless devices\niwlist wlan0 — <option> — Displays current status information of a device, more detailed then iwconfig\n        scan (sudo) — List wireless networks in range \niwspy — Sets the list of IP addresses in a wireless network and checks the quality of their connections\niwpriv — Accesses configuration options specific to a particular device\nrfkill  list — Show wireless adapters (wifi and bluetooth)\n    block/unblock <dev_num> — Block/unblock wireless device\niw dev wlan0 — link — Show link status of wlan0\n        set biterates <standard> — Manually set interface speed\n        scan (sudo) — List wireless networks in range \nwavemon — Monitor wireless connection link quality\n\n\n========\nINTERNET:\n========\n\nmutt — Mail client\nsftp — Secure ftp\nsshd — (openssh-server) ssh server deamon, on Windows service is named 'CYGWIN sshd'\n\n/etc/init.d/ssh restart (sudo) — Restart sshd (ssh deamon) \n/usr/local/etc/init.d/openssh start (sudo) — Start openssh deamon \nssh-keygen -t rsa -C <email> — Generate rsa key pair, keys are stored in ~/.ssh\n\nssh — SSH client\n    <user>@<address> \"mpg321 -\" < <file>.mp3 — Stream audio over ssh\n        enter ~. — Kill unresponsive session\nscp — Securely copy files over network. Example: `scp <local_file> <user>@<host>:~<remote_file>`\nwget — Download files from WWW\n    -O — Specify output file\n    -c — Continue downloading unfinished file. Can also use wildcards, but use single quotes around url. \n    -r -l1 --no-parent -A.gif — Recursively to the depth of one ignoring references to the parent directory and all gifs.\ncurl — Similar\n    -qO - — Writes to standard output + quiet \n    -i — Urls specified by standard input\ntransmissioncli — Torrent terminal client \n    -d — Download limit (kB/s)\n    -u — Upload limit \nyoutube-dl — Download from YouTube\nnoip2 — Dynamic dns update client\nrdesktop — Remote Desktop Protocol client\ntin, nn — Usenet client\nnrss — Rss feed reader\n\n\nBROWSERS:\nlynx — Terminal web browser \n    -cmd_log=<file> — Write keystrokes to script\n    -cmd_script=<file> — Read keystrokes from script\n    -syslog-urls — Log requested URLs with syslog.\n    -dumb — Prints txt to stdout \n    -crawl — Same, turns numbers off\n    -source — Prints html to stdout\n    -l — Add the current link to your bookmark file \n    a — Save the address of a document or link to a bookmark file, by default ~/lynx_bookmarks.html\n    o — Options (you can select vim mode)\n    ctrl+n — Scroll down two lines\n    ctrl+p — Scroll up two lines\n    ctrl+p — Previous line\n    crrl+n — Next line\nelinks — Another web browser (has menus)\n\n\nHACKING:\nnmap — -sP 192.168.1.1-3 — Network scanning\n    192.168.1.3 -p100-139 — Port scanning\n    -O 192.168.1.3 (sudo) — Scanning os \ntcpdump (sudo) — Sniffer (show network traffic) \n    -l — Buffered output (for piping to less, etc.)\nettercap — Multipurpose sniffer/interceptor/logger for switched LAN (can detect man in the middle, denial of service, DNS spoofing)\ndriftnet — Picks out and displays images from network traffic\nkismet — Wireless 802.11b monitoring tool\naircrack-ng — Wireless WEP/WPA cracking utilities\nCain & Abel — Password recovery tool for Microsoft Operating Systems\ndnsniff — Warious hacking tools: \n    arpspoof — For man in the middle attack\n    dsniff — Password sniffer for several protocols, ...\nip link set eth0    promisc on — Set network interface to promiscuous mode\n            multicast off — Set multicast off\n\n\n======\nSYSTEM:\n======\n\nmeta, system info — In cinnamon\nuname -a — Print system info, kernel version\ncat /etc/issue — Show name and version of distribution\n\ninit — Upstart init daemon job configuration\ntelinit — Change system runlevel\ndmesg — Print the contents of your bootup (startup) messages displayed by the kernel. This is often useful when debugging problems\ngetconf -a — Print all system configuration variables\nnohup <cmd> — Run a command immune to hangups, runs even after the shell is closed (writes output to nohup.out)\n    &>/dev/null & — Run a command immune to hangups in background, do not save output\nwmctrl — X Window Manager\nawesome — Tiled window manager\n    -k — Check configuration script for errors\n\nbusybox <cmd> — Combines tiny versions of many common UNIX utilities into a single small executable. (1.5 Mb)\nmono — .NET support\n\n\nUSERS:\nusers — Prints logged in users\nwho — Logged in users, more data\nw — Logged in users, also what are they running\nvipw — Edit password file\nvigr — Edit groups file\numask —  the umask is a value set by the shell. It controls the default permissions of any file created\nusermod <user> — Modify user account information\n    -l <new_name> <old_name> —\n    -c \"<new_real_name>\" <user> —\n    -d /my/new/home <user> — Change location of the users home\n    -m -d /my/new/home — Also move the files\nuseradd <user> — Add user\nadduser <user> — More high level (use `adduser <user> sudo`  after to add user to sudo group)\n    --system — Create system user (can not log in) \n    <group> — Add user to group (only takes effect after login!!!)\ngroups <user> — What groups user belongs to\nuserdel -r <user> — Remove user and his home dir\ndeluser  -remove-all-files <user> — More high level, removes also files outside home, cron jobs, itd\npasswd <user> — Change password\n\n\nFILE SYSTEMS:\nmkfs — Build a Linux filesystem\nmke2fs — Create a ext filesystem\nmkswap — Set up a swap area\nparted — Partition manipulation program\n    -l (sudo) — List partitions \nfdisk — Manipulate disk partition table\n    -l (sudo) — List partitions \ndisks — Nice GUI partition tool\nmount — List all mounted devices (to get list of devices use `fdisk -l`)\n    <device> <path> — For example mount /dev/hdc2 to /mymedia\nlsattr — List file attributes\nchattr — Change file attributes\nrkhunter -c — Checks if it can find any rootkits under the system\nntfsundelete — Undelete files on NTFS partition \n\n\nLOGGING:\nlast — When various users have logged in or out. This includes information on when the computer was rebooted.\nlastlog — Displays a list of users and what day/time they logged into the \n    system.  \n    To get all failed logins run:  \n    `cat /var/log/auth.log | grep \"failed password\" -i`.\nrsyslogd —  manages all the logs on your system\n    closelog, openlog, syslog, vsyslog -> library calls that send messages to the system logger\nlogger — Makes entries in the system log\nzeitgeist — Activity logger\n\n\nLOAD:\ntload — 'graphic' representation of system load\ntop — Show processes by resource consumption\n    <, > — Change resource\nhtop — Better top\nfree -tm — Displays memory statistics \n    -s <seconds> — Continuously display\nvmstat — Performance of system components / virtual memory statistics\nsar — System activity information\niostat — Disk usage\ntime <cmd> — Time a execution of a command\nperf — Profiler\n\n\nTRACING:\nauditd — System call auditing (package)\nausearch — Querys the audit logs\nautrace — Traces a specific process\nauditctl — Controls the behavior of the auditd server\nstrace <cmd> — Trace system calls and signals. All printed system calls can be looked up by `man`!\n    -s — Maximum string size we want printed (default is too short, 2000 is OK)\n    -f — Also follow children\n    -p <pid> — Attach to process\n    -o <file> — Write output to file\n    -c — Count/aggregate\n    -T — Time the execution of each call\nltrace — List library calls made by command\nlsof — List open files with file descriptors\n    -p <pid> — Open files by process\n    <path> — Open files in path\nlsmod — Show which kernel modules (drivers) are loaded\nmodinfo <module> — Get more information about kernel module\n\n\nHARDWARE:\nlshw (sudo) — List all hardware \nlspci [-tv] — Show pci info\nlsusb [-tv] — Show usb info\nlscpu — Print CPU information\ndmidecode -q — Display bios/dmi information like ram size/type,\n    max ram, computer model name, cpu information.\nsmartctl  -A /dev/sda — Show disk usage info\nhdparm  -tT /dev/sda — Do a read speed test\nbadblocks  -s /dev/sda — Check for bad blocks\nfstrim -v / — Discard unused blocks, useful for ssd-s\nsensors — (lm-sensors) hardware monitoring tool, temperature, fan speed\npwmconfig — (fancontrol) set fan speed\n\n\nTERMINAL:\ntty — Print the file name of the terminal connected to standard input\nstty — Change and print terminal line settings\nopenvt —  run a program on a next available tty\nscript — Makes a typescript of everything printed on your terminal. Ctrl-d to stop recording.\nsetterm — Set terminal attributes\n    -cursor off/on — Set cursor on/off\ngpm — Enable mouse for tty\n\n\nKEYS/CHARACTERS/FONTS:\nIN X:\nxmodmap — Remap keys\nsetxkbmap -layout us — Set us keyboard layout\nxev — Get keycodes of pressed keys\nxset — User preference utility for X\n    -r — Turn key autorepeat off \n    r — Turn key autorepeat on\nX NOT NECESSARY:\nloadkeys <country_code> — Load key mapping \nshowkey — Get keycodes of pressed keys\nsetfont <font> — Set console font\n    /usr/share/consolefonts/Uni2-VGA16.psf.gz — For example\n    /etc/default/console-setup — contains the default settings \njfbterm — Enable unicode characters in terminal\necho -en \"\\e]PC7373C9\" — Change blue color in tty (first numeral after P means slot, and others shade)\n\n\n=========\nPROCESSES:\n=========\n\nps --forest — View hierarchical view of processes\n    v — Virtual memory \n    --sort <field> — Sort by field \npstree — Similar\npgrep <pattern> — Prints PIDs of processes containing pattern\n    -l — Also print process name\npkill <pattern> — Kills every process that contains pattern in name\nkill    <pid> — Sends TERM signal to process\n    -kill <pid> — Sends KILL signal meaning force quit, data will be lost\nkillall — Uses name instead of pid\nskill — Sends signals to command/user/tty or report process status\n    -stop <user> — Stop all of the users processes\n    -cont <user> — Continue all users processes\nnice — Sets the priority for a process (from max of -20 to min of 20)\n    -20 <cmd> — Execute command with maximum priority\nrenice — Changes the priority of an existing process\n    +20 <pid> — Change processes priority to lowest level\nsnice — Works very similarly to skill\n    -10 -u root — Increase the priority of all root's processes\npmap — Report memory map of a process (mapped file)\n\n\nJOBS:\nCtrl z — Put job into background\njobs — Prints currently running job\nbg <job_id> — Put job in background\nfg <job_id> — Bring job to the foreground\n%n — Job number n\n%s — Job whose command line starts with s\n%% — Current job\n%- — Previous job\n\n\nSCHEDULED COMMANDS:\nat — Executes command at a particular time\n    at 21:30 / at now + time / at -f shell_script now + 1 hour\n    echo \"ls -l\" | at midnight\natq — List jobs currently in 'at' queue\natrm — Remove a job from the 'at' queue\ncrontab -e — Schedule commands for repeating execution \ncron — Daemon that executes scheduled commands \n    sudo service cron status — Print status of cron\n    sudo service cron [stop|start|restart] — Stop, start, or restart cron deamon\n    sudo vim /etc/default/cron — Set logging lever\n    cat /var/log/cron — Print log\nanacron — Like cron but it catches up with tasks next time the computer gets turned on\n\n\nSERVICES:   \nservice — Allows you to start, stop or restart a service (it runs a script in /etc/init.d folder)\n    -f sshd — Restart the ssh server\n    httpd status — Get status of apache\n    --status-all — Print status of all services\n    You can also execute the shell script directly from /etc/init.d folder like: /etc/init.d/httpd stop. \n\n\nSYSTEM RUNLEVELS:\nrunlevel — Output previous and current runlevel\n    0 — Shuts down the system\n    1 — Administrative single-user mode\n    2 — Same as 3 but without networking / multiuser with X server\n    3 — Text mode state (ctrl+alt+F1) / User defined\n    4 — User defined\n    5 — X-window mode (ctrl+alt+F7) / User defined\n    6 — Reboots\n    S — Single user mode\n\n\n==========\nMULTIMEDIA:\n==========\n\nAUDIO:\nalsamixer — Set audio level (curses)\namixer — Set audio levels (command line)\nrmmod pcspkr (sudo) — Disable pc-speaker, beep \n\ncmus — Music player (can be controlled from outside)\nmplayer — Movie/music player\nmpg321 — Plays mp3\nogg123 — Plays ogg\naplay — Plays audio\nplay — Plays audio\narecord <file>  — Command line audio recorder and player\n    -f <format> — Set file format (cd)\n    -d <seconds> — Set duration\n    -f cd -d <seconds> -t raw | lame -x -r — Out.mp3 — Capture audio that is playing and convert it to mp3\nid3v2 -l — Lists all files tags\nsound-juicer — Cd ripper\nxfburn — Cd burner\ntraverso — Simple daw\n\nBITMAP:\ndisplay — Displays an image\nmontage — Creates a montage from images\n    <input_file/s> -set label '%t' <output_file/s> — Labels images\nconvert <old> <new> — Converts file format (imagemagick)\nimport — Captures screen-shots from the X server\nmogrify — Edit image\ngocr — Command line text recognition tool\nocrad — Command line text recognition tool\nppmforge — Creates picture of random planet or clouds\ngnuplot — Interactive plotter: plot [-10:10] sin(x)\n    -p — Leave plots open after exit\n    plot <file>.dat — Plot data from dat file\nfbi — Display images inside tty\n\nVIDEO:\nffmpeg -i <file_in> <file_out> — Video and audio format converter. Has been replaced by avconv\navconv -i <file_in> <file_out> — Video and audio format converter (libav-tools)\n\nopenshot — Gui movie editor \nopenmovieeditor — Gui movie editor \naview, asciiview — ASCII art image viewer and video player\n\n\n\n##########################\n## AWESOME DEBIAN FILES ##\n##########################\n\nBASH:\n~/.bashrc — Executed at every shell startup, user specific\n/etc/bash.bashrc — Executed at every shell startup, all users\n~/.profile, .bash_profile, .bash_login — First file found executed at login, user specific \n/etc/profile — Executed at login, all users (put PATHS here)\n/etc/rc.local — Last startup script executed, runs command as su\n\n\nHOME:\n~/.Xmodmap — Keyboard map\n\n\nBINS:\n/bin — Key programs like ls, cat, bash, ...\n/sbin — Key programs for system management like ifconfig, mkfs, fdisk, ...\n/usr/bin — Distribution managed programs\n/usr/sbin — Distribution managed system programs\n/usr/local/bin — User programs not managed by the distribution package\n/usr/local/sbin — User system management programs, not managed by the distribution package\n\n\nGENERAL CONFIG:\n\"Edit To Configure\" or \"Editable Text Configuration\".\n/etc/mailcap — Default programs for extensions \n/etc/passwd — Users \n/etc/groups — Groups \n/etc/default — Boot script parameters that the end user or administrator is likely to change.  \n    /console-setup — Set console (tty) character set, font size, ...\n/etc/fstab — Filesystem table. To mount drive at startup, create dir in `/media` and append line like this :\n    `/dev/sda1   /media/data   ntfs   user,fmask=0111,dmask=0000   0   2` (Check `man fstab` for details).\n/etc/alternatives — Links to default application versions (here you can change the default Java JDK)\n/etc/issue — Name and version of distribution\n/etc/fstab — Automatic mounts are handled by configuring the file\n/etc/sudoers — Lists of users and the commands they can run with sudo (needs to be edited with visudo command)\n/etc/apt  /sources.list — List of places where to look for packages\n\n\nSERVICES:\n/etc/init/, ~/.init/  Init — Upstart init daemon job configuration\n/etc/init.d — Folder with service scripts, that get executed at start and end\n    /halt — Runs at the end \n/etc/rc<level>.d — Startup scripts for different runlevels - Links to scripts in /etc/init.d - S85httpd -> S means startup, K is for stop. (To disable service just change S for K)\n/etc/rc.local — Last initialization file executed - Put your commands here\n\n/etc/init/ssh.conf — Sshd config\n/etc/ssh/sshd_config — Sshd config\n/etc/crontab — System-wide crontab\n/etc/cron.hourly, /etc/cron.daily, ... — Links to scripts that will execute periodically. Scripts within a cron directory are run alphabetically.\n/etc/rsyslog.conf | rsyslog.d/50-default.conf — Log conf (need to restart rsyslogd after edit)\n/etc/syslog.conf — Configuration information for syslogd \n\n\nNETWORK:\n/etc/resolv.conf — Dns information\n/etc/sysconfig  /networking/devices/ifcfg-eth0 — Use ifcfg to configure a particular interface\n/etc/services — List of internet services with their port numbers\n/etc/NetworkManager  /NetworkManager.conf — Configuration file\n\n\nPROC: \nVarious information about the system.\n/proc/cpuinfo — Information about the CPU\n/proc/modules —  information about which kernel-modules are loaded on your system\n/proc/net — Network related\n    /route — Routing table\n    /netstat — Displays contents of /proc/net files\n/proc/iomem — Neat memory map\n/proc/partitions — Partitions info\n/proc/acpi  /battery/BAT1/info — Battery info\n    /ac_adapter/ACAD/state — Adapter info\n    /wakeup — List of devices that can wake up your machine via acpi\n    sudo sh -c \"echo USB1 > /proc/acpi/wakeup\" — Enable device USB1 to wakeup computer from sleep/suspend\n/proc/net/wireless — Wireless connection info\n\n\nUSR:\n\"Unix System Resources\"\n/usr/lib  /jvm — Java JREs and JDKs\n/usr/share  /man — Man pages\n    /bash-completion — Bash completion functions\n\n\nSBIN:\nThe \"system-administrator's bin file\".\nHosts programs that would be in /bin if they didn't have \"root-only\" access permissions.\n\n\nVAR:\n\"Variable\"\n/var/log — System logs in here\n    /auth.log — Logins\n    /syslog — Most of the rest of the logs \n/var/spool — Contains data which is awaiting some kind of later processing\n\n\nBOOT:\nKernels.\n/boot/grub/menu.lst — Grub configuration file\n/etc/default/grub — Grub configuration file\n\n\n\n###########\n##  GIT  ##\n###########\n\nGIT MANTRA:\n```\ngit init\ngit add <file> OR git add .\ngit status\ngit commit -am \"<commit_message>\"\n```\n\nCLONE FROM GITHUB:\ngit clone git@github.com:/<user>/<project> — Download repo (later you keep refreshing with 'git pull origin master') -> You need SSH key. If you don't want, use https://github.com/<user>/<repo> for address.\n\n\nGENERATE SSH KEY:\n1. — Check for existing keys: cd ~/.ssh; ls -al\n2. — Generate new key: ssh-keygen -t rsa -C \"your_email@example.com\"\n3. — Add your key to the ssh-agent: ssh-add ~/.ssh/id_rsa\n4. — Add your key to GitHub: copy contents of ~/.ssh/id_rsa.pub and paste them into key field at 'Account settings' > 'SSH Keys' > 'Add SSH key'.\n\n\nADD TO GITHUB:\n```\n# Create remote repository on website.\ngit remote add origin git@github.com:/<user>/<project>.git\ngit pull origin master\ngit push origin master\n# Sometimes also: git push --set-upstream origin master\n```\n\nREMOTE:\ngit remote  update — Get info about state of remote\n    show origin — Print address of the origin\n    set-url origin <origin> — `git@github.com:<user>/<repo>.git` - Change the url of origin, ssh key needed; `https://www.github.com/<user>/<repo>.git` - Same, but withouth key.\ngit status -uno — Check if everything up-to-date\ngit fetch; git checkout <branch> — Checkout remote branch\n\n\nTAGS:\ngit push --tags — Push tags\ngit fetch --tags — Pulling tags (automatically if on the same branch and there is a new commit?)\n\n\nUNDO:\ngit reset  --hard HEAD~1 — Delete last commit and all of its changes\n    HEAD~1 — Delete last commit but keep your changes\n\n\nALSO USEFUL:\ngit checkout HEAD^ <file> — Retrieve deleted file\ngit rm --cached <file> — Untrack file without deleting it\ngit tag -a 0.9.1 -m \"Version 0.9.1 release\" — Tag latest commit\ngit tag — List local tags\nchown -R <user>:<group> * (sudo) — In .git/objects \ngit format-patch -1 <sha> — Generate patch file\ngit rev-parse HEAD — Get sha of head\ngit revert — \ngit describe — Print version and hash of HEAD\ngit log --name-only --author=<name> — Print changed files by commit\ngit log <file> — Print files history\ngit ls-files — List files\ngit show <revision>:<file> — Take a peek at the older revision of the file\ngit diff <commit> <commit> — Compare two commits\ngit stash — If you want to switch branches, but you don't want to commit your changes yet, you can 'stash' them\ngit stash apply — Apply the changes you stashed\ngit stash list — List all the stashes\ngit stash show -p stash@{0} — Show the diff of most recent stash\ngit update-index --chmod=+x <file> — Change files permissions\ngit config -l — Print repos configuration settings\ngit config core.filemode false — Ignores executable bit of the files\n\n\nCHECKOUT:\ngit log > ../gitLog — First save log to file\ngit checkout <hash> — Then checkout previous versions\ngit checkout head — Return to head\n\n\nGITHUB MD FORMAT:\n![Alt text](/doc/basket-stats.png?raw=true \"<Description>\") — Insert image\n\n\nBISECT:\ngit bisect start — \ngit bisect bad — Tell git that current version is bad\ngit bisect good v25.0.2 — Tell git the last good version you know about.\n    Now git will checkout a version in between, so you can check it and tell:\ngit bisect bad/good — This will continue until the commit that introduced the bug is found \ngit bisect reset — Exit bisect mode\n\n\nTOOLS:\ngitk — Repo explorer\ngitg — A bit nicer version\ntig — Text based repo explorer\ngitstats — Generates stats for git repo, outputs HTML\n\n\nVIRTUAL BOX:\ngit config core.filemode false — Ignores the filemode changes made by the host system\ngit config --global --unset https.proxy — If problem pulling\n\n\n\n###########\n##  VIM  ##\n###########\n\n+<linenum> — Open file at line number\nalt+<normal mode key> — Escape, key !!!!!!!!!!!!!!!!!\nctrl+[ — Escape\n. — Execute last command again\n; — Repeat the last character-wise search\n\\c — Case insensitive search\n? — Search backward\nV — Linewise visual mode\n~ — Switch case\n> — Tab selection right \n>> — Tab line right\nP — Paste before cursor\nx — Delete character\ngF — Open file under cursor\nK — Look up word under cursor in man pages\nctrl+v — Select visual box (block select)\n:e — Reload file\n:sav — Save file as and keep new file open (save as)\n\n\nHELP:\nctrl+] — Follow link\nctrl+o — Go back\n:q — Exit help  \n\n\nMOVEMENT:\ne — End of word\nE — End of WORD\nW — Start of WORD\nge — End of previous word\n), ( — Sentence\n{, } — Paragraph\n]], [[ — Section\n:<num> — Goto line number\nctrl+o — Go to previous location\nctrl+i — Go to next location\n% — Jump to matching bracket\n\n\nLINES:\n0 — Start of line\n^,_ — First non-blank of line\n+,- — First non-blank of next/previous line\nEnter — First non-blank of next line\n\n\nSCREEN LINES:\ng0, g$ — Start/end of screen line\ngm — Middle of screen line\ngk, gj — Up/down one screen line\n\n\nPAGE UP/DOWN:\nH,M,L — Go to top/middle/bottom of screen\nctrl F,B — Page up/down\nctrl D,U — Half page up/down\nctrl E,Y — One more line at bottom/top \nz Enter, z., z- — Reposition line with cursor at top/middle/bottom\n\n\nSEARCH:\n*,# — Search forward/backward for exact word under cursor\ng*,g# — Same, but even when word is embedded\n% — Find match of current brace, quote,...\nfx,Fx — Move cursor forward/backward to x on current line\ntx,Tx — Same, but to one char before x\n;/, — Repeat/reverse last\n:%s/old/new/gc — Replace, like sed, c means with conformations\n\n\nMARKS:\n'\" — Move to position of last edit of file\n`. — Move to last change in file\n`0 — Position where you last exited vim\n\n\nINSERT MODE COMMANDS:\nctrl+h — Backspace\nctrl+u — Delete line\nctrl+w — Delete previous word\n\n\nMACROS:\nq<x> — Record actions (macro) into x\nq — Stop recording macro\n@<x> — Execute x (macro)\n\n\nREGISTERS:\n\"ayy — Copy line into register a\n\"ap — Paste register a\n:reg — Access all registers\n\n\nSET COMMAND:\n:set <x> — Set x\n:set no<x>, <x>! — Unset x\n:set <x>=value — Assign x\n:set <x>-=value — Remove value form <x>\n:set all — Print all values\n:set <x>? — Print x \n\n\nSET COMMAND OPERANDS:\nautoident, ai — Autoident (noai)\nbackup, bk  — Back file up before overwrite (nobackup) \nignorecase, ic — Ignore case in search (noic)\nnumber, nu — Display line numbers (nonu)\nrelativenumber, rnu — Display relative numbers (nornu)\nshiftwidth, sw — Number of spaces added when indenting (8)\ntabstop, ts — Tab width (8)\nwrap — Wrap lines (wrap)\nwrapscan, ws — Search wraps around file (ws)\nmouse=a — Mouse mode (use shift when selecting to copy to clipboard)\nlinebreak — Do not break words\n\n:set iskeyword-=. — Remove dot from words part (two words if separated with dot)\n\n\nEDIT COMMANDS:\n[n] operation [m] motion — If both n and m are specified then n x m\n\nc, d, y — Change, delete, yank \nC, D, Y — Till the end of line\ncc, dd, yy — Current line\ncf<x>, df<x>, yf<x> — Forward up to x\nc), d), y) — Sentence\n\n~ — Change case of character\ng~w — Switch case of a word\ngu, gU — To lower/upper case\n\n[p — Paste but match current indentation\nr — Replace character\nS — Substitute entire line\nx,X — Delete character/delete back\n. — Repeat last change\nctrl+a, ctrl+x — Increment/decrement number under cursor\n\n\nAUTOMATIC LINEBRAKE (WRAP):\ngq — Formats (wraps) selected text \ngqq — Format current line\n:set tw=72 — Set text width\nADVANCED:\ntw=72 fo=cq wm=0 — No automatic wrapping, rewrapping will wrap to 72\ntw — Controls the wrap width you would like to use\nfo — Controls whether or not automatic text wrapping is enabled, depending whether or not the t flag is set\nwm — Controls when to wrap based on terminal size\n\n\nCOLORSCHEME:\n:colorscheme — darkblue, torte — Nice, darker\n    slate, default — Less contrast\n:highlight Normal ctermbg=grey — Set light background\n\n\nSPELLCHECK:\n:set spell spelllang=en_us — Turn spellcheck on\n:set nospell — Turn off\n:setlocal spell spelllang=en_us — Set dictionary\nz= — Show suggestions for misspelled word\n]s — Go to next misspelled word\n[s — Go to previous misspelled word\n\n\nTABS:\n:tabe <file> — Open new tab\ngt, gT — Go to next/previous tab\nctrl+pgup/pgdn — Switch tab\nvim -p — Open one tab page per file\nZZ — Save and close tab (same as :wq)\n\n\nSPLITS:\n:vsp — Split vertically\nctrl-w, direction — Move to split\n\n\nAUTOCOMPLETE:\nctrl+n — Show autocomplete suggestions\n\n\nHEXDUMP:\n:%!xxd — Convert to hex\n:%!xxd -r — Convert back\n\n\nVUNDLE:\n:PluginInstall — Install plugins\n\n\nREFORMAT CODE:\n= — Fix indentation\n\n\n\n##########\n## MISC ##\n##########\n\nPIRATEBAY:\ntorrents.thepiratebay.sx/7532474/Cabin.torrent — Download torrent file\n\n\nJAVA:\njavac -cp <path>:<path>... — Tell Java where libraries are located\njava -Xmx6g myprogram — Reserve 6 giga for process\n    -jar <jar> — Execute jar\n    -cp .:<path>:<path>... — Tell java where libraries are located, you also need to pass the location of class among paths, hence .:\nexport _JAVA_OPTIONS=-Xmx1000m — Set heap space globally\nappletviewer <page>.html — Run Java applet\njps -lvm — List java processes\njmap -histo:live <pid> — Memory map\njvisualvm — Profiler\njar cvfe \"bla.jar\" <main_class> *.class — Create executable jar\njar xf <jar> — Extract files from jar\njar tf <jar> — Print contents of a jar \n\n\nINSTALL ORACLE JDK:\n```\nsudo apt-get remove openjdk*\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java7-installer\n```\n\nINSTALL ORACLE JDK ON DEBIAN:\n```\necho \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" | sudo tee /etc/apt/sources.list.d/webupd8team-java.list\necho \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" | sudo tee -a /etc/apt/sources.list.d/webupd8team-java.list\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886\nsudo apt-get update\nsudo apt-get install oracle-java7-installer\nsudo apt-get install oracle-java7-set-default\n```\n\nFIREFOX:\nabout:config — Layout.css.devPixelsPerPx default zoom (-1.0)\n\n\nXRANDR:\nxrandr  --output VGA1 --primary — Changes primary screen \n    --output VGA1 --auto --pos 0x0  — `--output LVDS1 --auto --right-of VGA1` - To change their relative positions\n    -q — List devices\n    --auto — Reset\n    --output LVDS1 --off — Turn off laptop screen\n    --output [VGA|HDMI] --mode 1600x1200 — 24\" 16x12 on\n\n\nMOUNT ISO:\n```\nsudo mkdir /media/x\nsudo mount -o loop <path_to_iso> /media/x\n```\n\nECLIPSE:\nctrl+1 — Quick fix\nalt+shift+s — Source submenu\nctrl+F7, esc — Close pop-up console window\nctrl+7, ctrl+/ — Toggle comment\nF3 — Goto definition\nobjectaid — UML plugin \n\n\nWINE:\nwinecfg — Drives tab to set drive\nwine explorer /desktop=abalaba,1024x768 app.exe — Run wine app in virtual desktop\nreason on wine: down alt down — Open menu\nregedit — Registry editor\n\n\nCYGWIN:\n[cygwin] ssh-host-cofig —  \n[command prompt] net start sshd — \n[any] ssh <windows_username - CASE MATTERS!>@<host> — Run sshd (use windows password)\n\n\nGOLANG:\ngo  build       — Compile packages and dependencies\n    clean       — Remove object files\n    env         — Print Go environment information\n    fix         — Run go tool fix on packages\n    fmt         — Run gofmt on package sources\n    get         — Download and install packages and dependencies (first you need to set GOPATH to dir where packages will get downloaded)\n    install     — Compile and install packages and dependencies\n    list        — List packages\n    run         — Compile and run Go program\n    test        — Test packages\n    tool        — Run specified go tool\n    version     — Print Go version\n    vet         — Run go tool vet on packages\n\nsyntax highlight — `https://github.com/jnwhiteh/vim-golang`\nfor gedit — `sudo cp /usr/share/gtksourceview-3.0/language-specs/go.lang /usr/share/gtksourceview-2.0/language-specs/`\nsimple ncurses — Go get github.com/nsf/termbox-go\n\n\nREPACKAGING A LINUX INSTALL ISO:\n```\n# Mount ISO\nmkdir -p /mnt/linux\nmount -o loop /tmp/linux-install.iso /mnt/linux\n```\n\n```\n# Copy contents to a working directory\ncd /mnt/\ntar -cvf — Linux | (cd /var/tmp && tar -xf — )\n```\n\n```\n# Make your changes and repackage (on Debian use genisoimage). -c passes the name of the file that will be created\ncd /var/tmp/linux\nmkisofs -o ../your-new.iso -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -J -R -V Your Disk Name Here .\n```\n\nGDB:\ngdb <cmd> — Start gdb\nrun <arguments>  — Start debugging\nrun < <file> — Run with piped input\nup — Follow trace\nprint <variable> — Print variable\n\n\nCOREDUMP:\nulimit -c unlimited — Set core file limit to unlimited\ngdb <cmd> core — Debug core file with gdb\n\n\nCHROME:\nF6, ctrl+l, alt+d — Go to address bar",
    "timestamp": "2024-10-17T17:51:51.105Z"
  },
  {
    "id": "1729187211920",
    "content": "宝藏GitHub库：Python Cheatsheet（python综合速查表）\n专为Python开发者和学习者设计的备忘单（cheatsheet）。它汇总了Python的核心语法、常用函数、库和实用代码片段，帮助大家快速查找和复习Python的常见用法。作者总结的都是非常关键和常见的概念和技巧,并且还在不断更新！\nhttps://github.com/gto76/python-cheatsheet",
    "timestamp": "2024-10-17T17:46:51.920Z"
  },
  {
    "id": "1729097054506",
    "content": "稻盛和夫: “你不会的东西,觉得难的东西,一定 不要躲,先搞明白,后精湛,你就比别人优秀了。因为大部分人都不舍得花力气去钻研,自动淘汰,所以你执着的努力,就占了大便宜。” 世上从不缺努力的人,缺的是努力到底的人,越是难的时候,越要坚持住,不要轻易的否定自己。",
    "timestamp": "2024-10-16T16:44:14.506Z"
  },
  {
    "id": "1729096593463",
    "content": "Biofy：个性化社交信息与作品展示平台！自由定制个人主页，独特地展现自己的身份。内容涵盖微博、GitHub等社交媒体账号，展示用户在旅行、摄影和软件工程方面的兴趣。它就像一张数字名片，帮助用户有效展示他们的才华和经历。\n🔗 https://biofy.cn",
    "timestamp": "2024-10-16T16:36:33.463Z"
  },
  {
    "id": "1729095651378",
    "content": "TinyMind：通过GitHub写博客和分享想法的平台！设计简洁，易于使用，专为写博客和分享想法而打造，适合希望通过文字表达想法并与他人交流且不喜欢折腾的人。\n一直在找类似memos，可以发布短想法的平台，轻便，简洁，可分享。\n🔗https://tinymind.me",
    "timestamp": "2024-10-16T16:20:51.378Z"
  }
]